# load barancing
# upstream front {
#   server isu1:1323 weight=10;
#   server isu2:1323 weight=10;
#   server isu3:1323 weight=10;
# }

upstream localapp {
  server 127.0.0.1:1323;
  # unix socket
  # server unix:/var/run/app.sock;
}

proxy_cache_path /dev/shm levels=1:2 keys_zone=my_zone:10m inactive=60m;
proxy_cache_key "$scheme$request_method$host$request_uri";

server {
    root /home/isucon/isucon10-qualify/webapp/public;
    listen 80 default_server;
    listen [::]:80 default_server;
	# listen 443 ssl http2;

	client_max_body_size 20M;

	gzip  on;
	gzip_http_version   1.1;
	gzip_proxied        any;
	gzip_disable        "MSIE [1-6]\.";
	gzip_vary           on;
	gzip_types text/css
	           text/plain
	           text/javascript
	           application/javascript
	           application/x-javascript
	           application/json;
	gzip_comp_level 1;
	gzip_min_length 1028;

    if ( $http_user_agent ~ ISUCONbot(-Mobile)? ) {
        return 503;
    }
    if ( $http_user_agent ~ ISUCONbot-Image\/ ) {
        return 503;
    }
    if ( $http_user_agent ~ Mediapartners-ISUCON ) {
        return 503;
    }
    if ( $http_user_agent ~ ISUCONCoffee ) {
        return 503;
    }
    if ( $http_user_agent ~ ISUCONFeedSeeker(Beta)? ) {
        return 503;
    }
    # if ( $http_user_agent ~ crawler \(https:\/\/isucon\.invalid\/(support\/faq\/|help\/jp\/) ) {
    #     return 503;
    # }
    if ( $http_user_agent ~ isubot ) {
        return 503;
    }
    if ( $http_user_agent ~ Isupider ) {
        return 503;
    }
    if ( $http_user_agent ~ Isupider(-image)?\+ ) {
        return 503;
    }
    # if ( $http_user_agent ~* (bot|crawler|spider)(?:[-_ .\/;@()]|$) ) {
    #     return 503;
    # }

	# location ~* \.(ico|txt|ttf|woff|eot|svg|jpg|png|gif|js|css|html|json|appcache)$ {
	#     gzip_static on;
	#     expires 1y;
	# 	add_header Cache-Control "public max-age=86400";
	# }
	# 
	# location /img/ {
	#     #root /home/isucon/public;
	#     expires 1y;
	# 	add_header Cache-Control "public max-age=86400";
	# }

    location /api {
            proxy_pass http://localapp;
    }

    location /initialize {
            proxy_pass http://localapp;
    }

    location / {
            root /www/data;
    }
}

